
#DEFINE NB_AGE 5
#DEFINE NB_MONSTRE 4

enum t_age { Préhistoire=0, Antiquité, Moyen_Age, Ere_Moderne, Ere_Futuriste };
enum t_monstre_Préhistoire { Monstre1=0, ... };
enum t_monstre_Antiquité { Monstre1=0, ... };
enum t_monstre_Moyen_Age { Monstre1=0, ... };
enum t_monstre_Ere_Moderne { Monstre1=0, ... };
enum t_monstre_Ere_futiriste { Monstre1=0, ... };

typedef struct{

	char nom[];
	int pv;
	long int xp;
	int argent; 
	t_personnage possedé[]; ( liste des monstres possédés en temps réel )
	int propriétaire;
	
}t_joueur;


typedef struct{
	
	char nom[];
	int temps_forma; ( temps apres clic a spawn sur le terrain )
	int argent; ( coût pour le joueur a creer cette unité )
	int pv;
	int ratio_ressource; ( gold et xp généré quand il tue quelqu'un )
	int dammage;
	int propriétaire; ( qui possede ce personnage )
	char description[];
	
}t_personnage;


typedef struct{
	
	int temps; ( temps avant utilisation )
	int cout; ( en xp pour le joueur )
	int degat; 
	char nom[];
	int propriétaire; ( pour ne pas tuer ses propres unité )
	char description[];
	
}t_ultime;



/* initialisation des monstres dans un tableau de taille [NB_AGE][NB_MONSTRE] (5 x 4) */

t_personnage T[NB_AGE][NB_MONSTRE];

Exemple utilisation : Je veux un personnage qui s'appelle Chevalier et qui est dans le Moyen-Age -> T[Moyen_Age][Chevalier] ( car initialisé dans enum )





